{"version":3,"sources":["contexts/UIContext.js","contexts/UserContext.js","components/table/ClassTable.js","tools/request.js","tools/base_url.js","tools/api.js","pages/class/ChooseClass.js","components/table/StudentTable.js","pages/class/ChooseClassStatus.js","pages/class/MyClass.js","pages/home/Home.js","pages/list/Staff.js","pages/list/Student.js","pages/profile/StaffProfile.js","pages/profile/StudentProfile.js","pages/score/Score.js","pages/score/ScoreStatus.js","tools/AppRouter.js","pages/authentication/Signin.js","tools/Router.js","components/public/Header.js","components/public/Sidebar.js","pages/index/Index.js","App.js","serviceWorker.js","index.js"],"names":["UIContext","createContext","initMessage","isMessage","title","description","UIContextProvider","props","useState","message","setMessage","useEffect","Notification","Provider","value","children","UserContext","UserContextProvider","history","useHistory","localStorage","getItem","user","setUser","JSON","parse","login","push","stringify","setItem","logout","removeItem","ClassTable","classes","className","length","scope","map","item","index","key","classId","name","staff","point","department","request","axios","create","baseURL","interceptors","use","config","token","headers","Authorization","error","console","log","Promise","reject","response","res","status","resolve","alert","data","post","get","id","searchText","ChooseClass","useContext","setClasses","setClassId","api","studentId","then","catch","msg","to","Form","layout","FormGroup","style","width","Input","placeholder","onChange","v","e","target","autocompelete","Button","onClick","preventDefault","userId","color","StudentTable","students","student","ChooseClassStatus","location","pathname","setClassName","dropOpen","setDropOpen","setStudents","Dropdown","open","Item","height","initModal","isModal","MyClass","modal","setModal","Modal","backdrop","show","size","Body","Footer","appearance","Icon","icon","Home","text","setText","setSearchText","Staff","staffs","setStaffs","decription","workId","Student","initUser","staffId","sex","age","role","StaffProfile","match","params","StudentProfile","Score","scores","setScores","average","setAverage","results","score","AppRouter","exact","path","component","ScoreStatus","num","password","Signin","btnLoading","setBtnLoading","handleChange","handleSubmit","setTimeout","Grid","fluid","Row","Col","xs","padding","onSubmit","type","block","disabled","Router","Header","Navbar","Nav","pullRight","componentClass","Link","transferNum","headerStyles","textAlign","fontSize","fontWeight","Sidebar","Sidenav","defaultOpenKeys","eventKey","Index","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a78e0860.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { Notification } from 'rsuite';\n\nexport const UIContext = createContext();\n\nconst initMessage = {\n  isMessage: false,\n  title: '',\n  description: ''\n};\n\n// type: success, warning, info, error\n\nconst UIContextProvider = (props) => {\n  const [message, setMessage] = useState(initMessage);\n\n  useEffect(() => {\n    if(message.isMessage) {\n      Notification[message.title]({\n        title: message.title,\n        description: message.description\n      });\n    }\n  }, [message]);\n\n  return (\n    <UIContext.Provider value={{ message, setMessage }}>\n      { props.children }\n    </UIContext.Provider>\n  );\n};\n\nexport default UIContextProvider;\n","import React, { useState, createContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const history = useHistory();\n  const [user, setUser] = useState(localStorage.getItem('user'));\n\n  const login = (user) => {\n    history.push(\"/\");\n    setUser(JSON.stringify(user));\n    localStorage.setItem('user', JSON.stringify(user));\n  };\n\n  const logout = () => {\n    history.push('/signin');\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <UserContext.Provider value={{ user: JSON.parse(user), login, logout }}>\n      { props.children }\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","import React from 'react';\n\nconst ClassTable = ({ classes }) => {\n  return (\n    <div className=\"my-table-container\">\n      { classes.length? (\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">课号</th>\n              <th scope=\"col\">课程名称</th>\n              <th scope=\"col\">任课教师</th>\n              <th scope=\"col\">学分</th>\n              <th scope=\"col\">所属学院</th>\n            </tr>\n          </thead>\n          <tbody>\n            { classes.map((item, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{ index + 1 }</th>\n                <td>{ item.classId }</td>\n                <td>{ item.name }</td>\n                <td>{ item.staff }</td>\n                <td>{ item.point }</td>\n                <td>{ item.department }</td>\n              </tr>\n            )) }\n          </tbody>\n        </table>\n      ) : (\n        <p>没有找到...</p>\n      ) }\n    </div>\n  );\n};\n\nexport default ClassTable;\n","import axios from 'axios';\nimport { base_url } from './base_url';\n\n// create an axios instance\nconst request = axios.create({\n  baseURL: base_url,\n});\n\n// axios请求拦截器\nrequest.interceptors.request.use(\n\tconfig => {\n    // 设置统一的请求头\n    let token = localStorage.getItem('token');\n    if(token) {\n      config.headers.Authorization = token;\n    }\n\t\treturn config;\n\t},\n\terror => {\n\t\tconsole.log(error);\n\t\tPromise.reject(error);\n\t}\n);\n\n// axios响应拦截器\nrequest.interceptors.response.use(\n  res => {\n    // status code: 200\n    if(res && res.status === 200) {\n      return Promise.resolve(res);\n    } else {\n      return Promise.reject(res);\n    }\n  },\n   // status code: other\n  error => {\n    console.log(error);\n    if(error && error.response) {\n      switch(error.response.status) {\n        case 500:\n          alert('服务器发生错误，请检查服务器');\n          break;\n        case 502:\n          alert('网关错误');\n          break;\n        case 503:\n          alert('服务不可用，服务器暂时过载或维护');\n          break;\n        case 504:\n          alert('网关超时');\n          break;\n        default:\n          return Promise.reject(error.response);\n      }\n    }\n    else {\n      return Promise.reject(error);\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nexport default request;\n","export const base_url = 'http://47.98.249.108:8080/';\n","import request from './request';\n\nexport default {\n  // authentication\n  signin: (data) => request.post('/signin', data),\n  // student\n  getAllStudents: () => request.get('/students'),\n  getStudent: (id) => request.get(`/students/${id}`),\n  getClassStudents: (id) => request.get(`/students/class/${id}`),\n  // staff\n  getAllStaffs: () => request.get('/staffs'),\n  getStaff: (id) => request.get(`/staffs/${id}`),\n  // class\n  getAllClasses: (searchText) => request.get(`/classes/${searchText}`),\n  getMyClasses: (data) => request.post('/classes', data),\n  cancelClass: (data) => request.post('/classes/cancel', data),\n  getLeftClasses: (id) => request.get(`/classes/left/${id}`),\n  chooseClass: (data) => request.post('/classes/choose', data),\n  // score\n  getMyScore: (id) => request.get(`/score/${id}`),\n  getClassScore: (id) => request.get(`/score/class/${id}`)\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, FormGroup, Input, Button } from 'rsuite';\nimport { UIContext } from '../../contexts/UIContext';\nimport { UserContext } from '../../contexts/UserContext';\nimport ClassTable from '../../components/table/ClassTable';\nimport api from '../../tools/api';\nimport './class.css';\n\nconst ChooseClass = () => {\n  const { setMessage } = useContext(UIContext);\n  const { user } = useContext(UserContext);\n  const [classes, setClasses] = useState([]);\n  const [classId, setClassId] = useState('');\n\n  useEffect(() => {\n    api\n      .getLeftClasses(user.studentId)\n      .then(res => {\n        if(res.status === 200) {\n          setClasses(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n  }, [user, setMessage]);\n\n  const handleChange = (v, e) => {\n    setClassId(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!classId) {\n      setMessage({\n        isMessage: true,\n        title: 'warning',\n        description: '请填写要选的课程号码...'\n      });\n      return;\n    }\n\n    let data = {\n      userId: user.studentId,\n      classId\n    };\n    api\n      .chooseClass(data)\n      .then(res => {\n        if(res.status === 200) {\n          setClasses(res.data);\n          setClassId('');\n          setMessage({\n            isMessage: true,\n            title: 'success',\n            description: '选课成功！'\n          });\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n  };\n\n  return (\n    <div className=\"choose-class my-container\">\n      <div className=\"my-bread mt-4\">\n        <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n        <span className=\"my-forward-slash\">/</span>\n        <span className=\"my-bread-text\">Choose Class</span>\n      </div>\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">可选课程（{ classes.length }）</h3>\n        <div className=\"container pb-4\">\n          <Form layout=\"inline\" className=\"class-input\">\n            <FormGroup className=\"mr-2\" style={{ width: \"50%\" }}>\n              <Input\n                className=\"my-input\"\n                placeholder=\"请输入课程号\"\n                id=\"text\"\n                value={classId}\n                onChange={handleChange}\n                style={{ width: \"100%\" }}\n                autocompelete=\"off\"\n              />\n            </FormGroup>\n            <Button onClick={handleSubmit} color=\"red\">确定选课</Button>\n          </Form>\n          <ClassTable classes={classes} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseClass;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst StudentTable = ({ students }) => {\n  return (\n    <div className=\"my-table-container\">\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">学号</th>\n            <th scope=\"col\">姓名</th>\n            <th scope=\"col\">院系</th>\n          </tr>\n        </thead>\n        <tbody>\n          { students.length ? students.map((student, index) => (\n            <tr key={index}>\n              <th scope=\"row\">{ index + 1 }</th>\n              <td>\n                <Link\n                  className=\"my-link-style\"\n                  to={`/student-profile/${student.studentId}`}\n                >\n                  { student.studentId }\n                </Link>\n              </td>\n              <td>{ student.name }</td>\n              <td>{ student.department }</td>\n            </tr>\n          )) : null }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default StudentTable;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'rsuite';\nimport { UIContext } from '../../contexts/UIContext';\nimport StudentTable from '../../components/table/StudentTable';\nimport api from '../../tools/api';\n\nconst ChooseClassStatus = (props) => {\n  localStorage.setItem('history', props.location.pathname);\n\n  const { setMessage } = useContext(UIContext);\n  const [classId, setClassId] = useState('2800R807');\n  const [className, setClassName] = useState('社会学思维');\n  const [dropOpen, setDropOpen] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n\n  useEffect(() => {\n    api\n      .getAllClasses(null)\n      .then(res => {\n        if(res.status === 200) {\n          setClasses(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n  }, [setMessage]);\n\n  useEffect(() => {\n    api\n      .getClassStudents(classId)\n      .then(res => {\n        if(res.status === 200) {\n          setStudents(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n\n  }, [classId, setMessage]);\n\n  return (\n    <div className=\"my-container\">\n      <div className=\"my-bread mt-4\">\n        <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n        <span className=\"my-forward-slash\">/</span>\n        <span className=\"my-bread-text\">Choose Class Status</span>\n      </div>\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">选课情况（{ students.length }）</h3>\n        <div className=\"container\">\n          <span>选择要查看的课程：</span>\n          <Dropdown\n            title={className}\n            open={dropOpen}\n            onClick={() => setDropOpen(!dropOpen)}\n            className=\"mb-1\"\n          >\n            <div className=\"my-dropdown-menu\">\n            { classes.map((item, index) => (\n              <Dropdown.Item\n                key={index}\n                className=\"my-dropdown-item\"\n                onClick={() => {\n                  setClassName(item.name);\n                  setClassId(item.classId);\n                  setDropOpen(false);\n                }}\n              >{ item.name }</Dropdown.Item>\n            )) }\n            </div>\n          </Dropdown>\n\n          <div className=\"mt-3\">\n            { students.length? (\n              <StudentTable students={students} />\n            ) : (\n              <p style={{ height: '400px' }}>还没有人选择这门课...</p>\n            ) }\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseClassStatus;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon, Modal, Button } from 'rsuite';\nimport { UIContext } from '../../contexts/UIContext';\nimport { UserContext } from '../../contexts/UserContext';\nimport api from '../../tools/api';\n\nconst initModal = {\n  isModal: false,\n  name: '',\n  id: ''\n};\n\nconst MyClass = () => {\n  const { setMessage } = useContext(UIContext);\n  const { user } = useContext(UserContext);\n  const [classes, setClasses] = useState([]);\n  const [modal, setModal] = useState(initModal);\n\n  useEffect(() => {\n    let data = {\n      id: user.studentId\n    };\n\n    api\n      .getMyClasses(data)\n      .then(res => {\n        if(res.status === 200) {\n          setClasses(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n\n  }, [setMessage, user]);\n\n  const openModal = (id, name) => {\n    setModal({\n      isModal: true,\n      name: name,\n      id: id\n    });\n  };\n\n  const handleCancelClass = () => {\n    let data = {\n      userId: user.studentId,\n      classId: modal.id\n    };\n\n    api\n      .cancelClass(data)\n      .then(res => {\n        if(res.status === 200) {\n          setClasses(res.data);\n          setModal({ ...modal, isModal: false });\n          setMessage({\n            isMessage: true,\n            title: 'success',\n            description: '删除成功'\n          });\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n          setModal({ ...modal, isModal: false });\n        }\n      })\n  };\n\n  return (\n    <div className=\"my-class my-container\">\n\n      <div className=\"modal-container\">\n        <Modal\n          backdrop=\"static\"\n          show={modal.isModal}\n          size=\"xs\"\n        >\n          <Modal.Body>确定要退选 { modal.name } 吗？</Modal.Body>\n          <Modal.Footer>\n            <Button\n              color=\"red\"\n              onClick={handleCancelClass}\n            >确认</Button>\n            <Button\n              appearance=\"subtle\"\n              onClick={() => setModal({...modal, isModal: false})}\n            >取消</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n\n      <div className=\"my-bread mt-4\">\n        <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n        <span className=\"my-forward-slash\">/</span>\n        <span className=\"my-bread-text\">My Class</span>\n      </div>\n\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">已选课程（{ classes.length }）</h3>\n        <div className=\"container\">\n          <div className=\"my-table-container\">\n            { classes.length? (\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">课号</th>\n                    <th scope=\"col\">课程名称</th>\n                    <th scope=\"col\">任课教师</th>\n                    <th scope=\"col\">学分</th>\n                    <th scope=\"col\">所属学院</th>\n                    <th scope=\"col\">操作</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { classes.map((item, index) => (\n                    <tr key={index}>\n                      <th scope=\"row\">{ index + 1 }</th>\n                      <td>{ item.classId }</td>\n                      <td>{ item.name }</td>\n                      <td>{ item.staff }</td>\n                      <td>{ item.point }</td>\n                      <td>{ item.department }</td>\n                      <td>\n                        <span\n                          className=\"my-link-style\"\n                          onClick={() => openModal(item.classId, item.name)}\n                        >\n                          <Icon\n                            icon=\"exclamation\"\n                            className=\"mr-2\"\n                            style={{ color: '#e82903' }}\n                          />\n                          退课\n                        </span>\n                      </td>\n                    </tr>\n                  )) }\n\n                </tbody>\n              </table>\n            ) : (\n              <p>还没有选课...</p>\n            ) }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyClass;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Form, FormGroup, Input, Button } from 'rsuite';\nimport { UIContext } from '../../contexts/UIContext';\nimport ClassTable from '../../components/table/ClassTable';\nimport api from '../../tools/api';\n\nconst Home = () => {\n  const { setMessage } = useContext(UIContext);\n  const [classes, setClasses] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [searchText, setSearchText] = useState(null);\n\n  useEffect(() => {\n    api\n      .getAllClasses(searchText)\n      .then(res => {\n        if(res.status === 200) {\n          setClasses(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n          setClasses([]);\n        }\n      })\n\n  }, [searchText, setMessage]);\n\n  const handleChange = (v, e) => {\n    if(!e.target.value) {\n      setSearchText(null);\n    }\n    setText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!text) {\n      setMessage({\n        isMessage: true,\n        title: 'warning',\n        description: '请填写要查找的课程名称'\n      });\n      return;\n    }\n    setSearchText(text);\n  };\n\n  return (\n    <div className=\"class my-container\">\n      <div className=\"my-bread mt-4\">\n        <span className=\"my-bread-text\">Home</span>\n      </div>\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">所有课程（{ classes.length }）</h3>\n        <div className=\"container pb-4\">\n          <Form layout=\"inline\" className=\"class-input\">\n            <FormGroup className=\"mr-2\" style={{ width: \"50%\" }}>\n              <Input\n                className=\"my-input\"\n                placeholder=\"请输入课程名称\"\n                id=\"text\"\n                value={text}\n                onChange={handleChange}\n                style={{ width: \"100%\" }}\n                autocompelete=\"off\"\n              />\n            </FormGroup>\n\n            <Button onClick={handleSubmit} color=\"red\">查找</Button>\n          </Form>\n          <ClassTable classes={classes} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../contexts/UIContext';\nimport api from '../../tools/api';\n\nconst Staff = (props) => {\n  localStorage.setItem('history', props.location.pathname);\n\n  const { setMessage } = useContext(UIContext);\n  const [staffs, setStaffs] = useState([]);\n\n  useEffect(() => {\n    api\n      .getAllStaffs()\n      .then(res => {\n        if(res.status === 200) {\n          setStaffs(res.data);\n        }\n      })\n      .catch(error => {\n        setMessage({\n          isMessage: true,\n          title: 'error',\n          decription: '获取教师列表失败'\n        });\n      })\n  }, [setMessage]);\n\n  return (\n    <div className=\"student my-container\">\n      <div className=\"my-bread mt-4\">\n        <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n        <span className=\"my-forward-slash\">/</span>\n        <span className=\"my-bread-text\">Staffs</span>\n      </div>\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">所有教师（{ staffs.length }）</h3>\n        <div className=\"container pb-4\">\n          <div className=\"my-table-container\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">工号</th>\n                  <th scope=\"col\">姓名</th>\n                  <th scope=\"col\">院系</th>\n                </tr>\n              </thead>\n              <tbody>\n                { staffs.length ? staffs.map((staff, index) => (\n                  <tr key={index}>\n                    <th scope=\"row\">{ index + 1 }</th>\n                    <td>\n                      <Link\n                        className=\"my-link-style\"\n                        to={`/staff-profile/${staff.workId}`}\n                      >\n                        { staff.workId }\n                      </Link>\n                    </td>\n                    <td>{ staff.name }</td>\n                    <td>{ staff.department }</td>\n                  </tr>\n                )) : null }\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Staff;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../contexts/UIContext';\nimport StudentTable from '../../components/table/StudentTable';\nimport api from '../../tools/api';\n\nconst Student = (props) => {\n  localStorage.setItem('history', props.location.pathname);\n\n  const { setMessage } = useContext(UIContext);\n  const [students, setStudents] = useState([]);\n\n  useEffect(() => {\n    api\n      .getAllStudents()\n      .then(res => {\n        if(res.status === 200) {\n          setStudents(res.data);\n        }\n      })\n      .catch(error => {\n        setMessage({\n          isMessage: true,\n          title: 'error',\n          decription: '获取学生列表失败'\n        });\n      })\n\n  }, [setMessage]);\n\n  return (\n    <div className=\"student my-container\">\n      <div className=\"my-bread mt-4\">\n        <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n        <span className=\"my-forward-slash\">/</span>\n        <span className=\"my-bread-text\">Students</span>\n      </div>\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">所有学生（{ students.length }）</h3>\n        <div className=\"container pb-4\">\n          <StudentTable students={students} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Student;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../contexts/UIContext';\nimport api from '../../tools/api';\n\nconst initUser = {\n  staffId: '1000',\n  name: 'xxx',\n  sex: 'x',\n  age: '0',\n  department: 'xxx',\n  role: 'staff'\n};\n\nconst StaffProfile = (props) => {\n  const { setMessage } = useContext(UIContext);\n  const [user, setUser] = useState(initUser);\n\n  useEffect(() => {\n    api\n      .getStaff(props.match.params.id)\n      .then(res => {\n        if(res.status === 200) {\n          setUser(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n  }, [props, setMessage]);\n\n  return (\n    <div className=\"profile my-container\">\n      { localStorage.getItem('history') === '/staffs' && (\n        <div className=\"my-bread mt-4\">\n          <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <Link to=\"/staffs\" className=\"my-bread-link\">Staffs</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <span className=\"my-bread-text\">Profile</span>\n        </div>\n      ) }\n\n      { localStorage.getItem('history') === '/home' && (\n        <div className=\"my-bread mt-4\">\n          <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <span className=\"my-bread-text\">Profile</span>\n        </div>\n      ) }\n\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">个人信息</h3>\n        <div className=\"my-card-body\">\n\n          { user.role === 'student'? (\n            <div className=\"my-list-item mb-3\">\n              <span className=\"my-list-title\">学号：</span>\n              <span className=\"my-list-text\">{ user.studentId }</span>\n            </div>\n          ) : (\n            <div className=\"my-list-item mb-3\">\n              <span className=\"my-list-title\">工号：</span>\n              <span className=\"my-list-text\">{ user.workId }</span>\n            </div>\n          ) }\n\n          <div className=\"my-list-item mb-3\">\n            <span className=\"my-list-title\">姓名：</span>\n            <span className=\"my-list-text\">{ user.name }</span>\n          </div>\n\n          <div className=\"my-list-item mb-3\">\n            <span className=\"my-list-title\">姓别：</span>\n            <span className=\"my-list-text\">{ user.sex }</span>\n          </div>\n\n          <div className=\"my-list-item mb-3\">\n            <span className=\"my-list-title\">年龄：</span>\n            <span className=\"my-list-text\">{ user.age }</span>\n          </div>\n\n          <div className=\"my-list-item mb-3\">\n            <span className=\"my-list-title\">所属院系：</span>\n            <span className=\"my-list-text\">{ user.department }</span>\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default StaffProfile;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../contexts/UIContext';\nimport api from '../../tools/api';\n\nconst initUser = {\n  studentId: '1000',\n  name: 'xxx',\n  sex: 'x',\n  age: '0',\n  department: 'xxx',\n  role: 'student'\n};\n\nconst StudentProfile = (props) => {\n  const { setMessage } = useContext(UIContext);\n  const [user, setUser] = useState(initUser);\n\n  useEffect(() => {\n    api\n      .getStudent(props.match.params.id)\n      .then(res => {\n        if(res.status === 200) {\n          setUser(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n    return () => localStorage.removeItem('history');\n  }, [props, setMessage]);\n\n  return (\n    <div className=\"profile my-container\">\n      { localStorage.getItem('history') === '/students' && (\n        <div className=\"my-bread mt-4\">\n          <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <Link to=\"/students\" className=\"my-bread-link\">Students</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <span className=\"my-bread-text\">Profile</span>\n        </div>\n      ) }\n\n      { localStorage.getItem('history') === '/choose-class-status' && (\n        <div className=\"my-bread mt-4\">\n          <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <Link to=\"/choose-class-status\" className=\"my-bread-link\">Choose Class Status</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <span className=\"my-bread-text\">Profile</span>\n        </div>\n      ) }\n\n      { localStorage.getItem('history') === '/score-status' && (\n        <div className=\"my-bread mt-4\">\n          <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <Link to=\"/score-status\" className=\"my-bread-link\">Score Status</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <span className=\"my-bread-text\">Profile</span>\n        </div>\n      ) }\n\n      { localStorage.getItem('history') === '/home' && (\n        <div className=\"my-bread mt-4\">\n          <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n          <span className=\"my-forward-slash\">/</span>\n          <span className=\"my-bread-text\">Profile</span>\n        </div>\n      ) }\n\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">个人信息</h3>\n        <div className=\"my-card-body\">\n\n        <div className=\"my-list-item mb-3\">\n          <span className=\"my-list-title\">学号：</span>\n          <span className=\"my-list-text\">{ user.studentId }</span>\n        </div>\n\n          <div className=\"my-list-item mb-3\">\n            <span className=\"my-list-title\">姓名：</span>\n            <span className=\"my-list-text\">{ user.name }</span>\n          </div>\n\n          <div className=\"my-list-item mb-3\">\n            <span className=\"my-list-title\">姓别：</span>\n            <span className=\"my-list-text\">{ user.sex }</span>\n          </div>\n\n          <div className=\"my-list-item mb-3\">\n            <span className=\"my-list-title\">年龄：</span>\n            <span className=\"my-list-text\">{ user.age }</span>\n          </div>\n\n          <div className=\"my-list-item mb-3\">\n            <span className=\"my-list-title\">所属院系：</span>\n            <span className=\"my-list-text\">{ user.department }</span>\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default StudentProfile;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../contexts/UIContext';\nimport { UserContext } from '../../contexts/UserContext';\nimport api from '../../tools/api';\nimport './score.css';\n\nconst Score = () => {\n  const { setMessage } = useContext(UIContext);\n  const { user } = useContext(UserContext);\n  const [scores, setScores] = useState([]);\n  const [average, setAverage] = useState(0);\n\n  useEffect(() => {\n    api\n      .getMyScore(user.studentId)\n      .then(res => {\n        if(res.status === 200) {\n          setScores(res.data.results);\n          setAverage(res.data.average);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n\n  }, [user, setMessage]);\n\n  return (\n    <div className=\"score my-container\">\n      <div className=\"my-bread mt-4\">\n        <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n        <span className=\"my-forward-slash\">/</span>\n        <span className=\"my-bread-text\">My Score</span>\n      </div>\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">成绩单（{scores.length}）</h3>\n        <div className=\"container pb-4\">\n          <div className=\"my-table-container\">\n            { scores.length? (\n              <div>\n                <table className=\"table table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">课号</th>\n                      <th scope=\"col\">课程名称</th>\n                      <th scope=\"col\">任课教师</th>\n                      <th scope=\"col\">学分</th>\n                      <th scope=\"col\">所属学院</th>\n                      <th scope=\"col\">成绩</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    { scores.map((score, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{ index }</th>\n                        <td>{ score.classId }</td>\n                        <td>{ score.name }</td>\n                        <td>{ score.staff }</td>\n                        <td>{ score.point }</td>\n                        <td>{ score.department }</td>\n                        <td>{ score.score }</td>\n                      </tr>\n                    )) }\n                  </tbody>\n                </table>\n                <p className=\"average-point\">我的平均成绩：{ average }</p>\n              </div>\n            ) : (\n              <p>还没有完成的课程...</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Score;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'rsuite';\nimport { UIContext } from '../../contexts/UIContext';\nimport api from '../../tools/api';\n\nconst ChooseClassStatus = (props) => {\n  localStorage.setItem('history', props.location.pathname);\n\n  const { setMessage } = useContext(UIContext);\n  const [classId, setClassId] = useState('2800R807');\n  const [className, setClassName] = useState('社会学思维');\n  const [dropOpen, setDropOpen] = useState(false);\n  const [classes, setClasses] = useState([]);\n  const [scores, setScores] = useState([]);\n\n  useEffect(() => {\n    api\n      .getAllClasses(null)\n      .then(res => {\n        if(res.status === 200) {\n          setClasses(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n  }, [setMessage]);\n\n  useEffect(() => {\n    api\n      .getClassScore(classId)\n      .then(res => {\n        if(res.status === 200) {\n          setScores(res.data);\n        }\n      })\n      .catch(error => {\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n        }\n      })\n\n  }, [classId, setMessage]);\n\n  return (\n    <div className=\"my-container\">\n      <div className=\"my-bread mt-4\">\n        <Link to=\"/\" className=\"my-bread-link\">Home</Link>\n        <span className=\"my-forward-slash\">/</span>\n        <span className=\"my-bread-text\">Score Status</span>\n      </div>\n      <div className=\"my-card mt-4\">\n        <h3 className=\"my-card-title\">成绩情况（{ scores.length }）</h3>\n        <div className=\"container\">\n          <span>选择要查看的课程：</span>\n          <Dropdown\n            title={className}\n            open={dropOpen}\n            onClick={() => setDropOpen(!dropOpen)}\n            className=\"mb-1\"\n          >\n            <div className=\"my-dropdown-menu\">\n            { classes.map((item, index) => (\n              <Dropdown.Item\n                key={index}\n                className=\"my-dropdown-item\"\n                onClick={() => {\n                  setClassName(item.name);\n                  setClassId(item.classId);\n                  setDropOpen(false);\n                }}\n              >{ item.name }</Dropdown.Item>\n            )) }\n            </div>\n          </Dropdown>\n\n          <div className=\"mt-3\">\n            { scores.length? (\n              <div className=\"my-table-container\">\n                <table className=\"table table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">学号</th>\n                      <th scope=\"col\">姓名</th>\n                      <th scope=\"col\">院系</th>\n                      <th scope=\"col\">成绩</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    { scores.map((score, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{ index + 1 }</th>\n                        <td>\n                          <Link\n                            className=\"my-link-style\"\n                            to={`/student-profile/${score.studentId}`}\n                          >\n                            { score.studentId }\n                          </Link>\n                        </td>\n                        <td>{ score.name }</td>\n                        <td>{ score.department }</td>\n                        <td>{ score.score }</td>\n                      </tr>\n                    )) }\n                  </tbody>\n                </table>\n              </div>\n            ) : (\n              <p style={{ height: '400px' }}>还没有人完成这门课...</p>\n            ) }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseClassStatus;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ChooseClass from '../pages/class/ChooseClass';\nimport ChooseClassStatus from '../pages/class/ChooseClassStatus';\nimport MyClass from '../pages/class/MyClass';\nimport Home from '../pages/home/Home';\nimport Staff from '../pages/list/Staff';\nimport Student from '../pages/list/Student';\nimport StaffProfile from '../pages/profile/StaffProfile';\nimport StudentProfile from '../pages/profile/StudentProfile';\nimport Score from '../pages/score/Score';\nimport ScoreStatus from '../pages/score/ScoreStatus';\n\nconst AppRouter = () =>  {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/choose-class\" component={ChooseClass} />\n      <Route path=\"/choose-class-status\" component={ChooseClassStatus} />\n      <Route path=\"/my-class\" component={MyClass} />\n      <Route path=\"/staffs\" component={Staff} />\n      <Route path=\"/students\" component={Student} />\n      <Route path=\"/student-profile/:id\" component={StudentProfile} />\n      <Route path=\"/staff-profile/:id\" component={StaffProfile} />\n      <Route path=\"/score\" component={Score} />\n      <Route path=\"/score-status\" component={ScoreStatus} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useContext } from 'react';\nimport { Input, Grid, Row, Col, Button } from 'rsuite';\nimport { UIContext } from '../../contexts/UIContext';\nimport { UserContext } from '../../contexts/UserContext';\nimport api from '../../tools/api';\nimport \"./signin.css\";\n\nconst initUser = {\n  num: '',\n  password: ''\n};\n\nconst Signin = () => {\n  const { setMessage } = useContext(UIContext);\n  const { login } = useContext(UserContext);\n\n  const [user, setUser] = useState(initUser);\n  const [btnLoading, setBtnLoading] = useState(false);\n\n  const handleChange = (v, e) => {\n    setUser({\n      ...user,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!user.num || !user.password) {\n      setMessage({\n        isMessage: true,\n        title: 'warning',\n        description: '还有信息没有填写完整噢'\n      });\n      return;\n    }\n\n    setBtnLoading(true);\n\n    api\n      .signin(user)\n      .then(res => {\n        if(res.status === 200) {\n          let user = res.data;\n          // success\n          setMessage({\n            isMessage: true,\n            title: 'success',\n            description: '登录成功'\n          });\n          setBtnLoading(false);\n\n          setTimeout(() => {\n            login(user);\n          }, 2000);\n\n        }\n      })\n      .catch(error => {\n        // failed\n        setBtnLoading(false);\n        console.log(error);\n        if(error.status === 400) {\n          setMessage({\n            isMessage: true,\n            title: 'error',\n            description: error.data.msg\n          });\n          setUser({\n            ...user,\n            password: ''\n          });\n        }\n      })\n  };\n\n  return (\n    <div className=\"signin\">\n      <Grid fluid>\n        <Row className=\"login-row\">\n          <Col xs={14} style={{ padding: 0 }}>\n            <div className=\"login-image\"></div>\n          </Col>\n          <Col xs={10} style={{ padding: 0 }}>\n          <h3 className=\"login-title\">教学管理系统</h3>\n            <div className=\"login-form\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"login-input\">\n                  <Input\n                    id=\"num\"\n                    value={user.num}\n                    placeholder=\"学号/工号\"\n                    className=\"my-input\"\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n                </div>\n                <div className=\"login-input\">\n                  <Input\n                    id=\"password\"\n                    value={user.password}\n                    placeholder=\"密码\"\n                    className=\"my-input\"\n                    type=\"password\"\n                    onChange={handleChange}\n                  />\n                </div>\n\n                <Button\n                  block\n                  color=\"red\"\n                  onClick={handleSubmit}\n                  disabled={btnLoading}\n                >登录</Button>\n              </form>\n            </div>\n          </Col>\n        </Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Signin;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Signin from '../pages/authentication/Signin';\n\nconst Router = () =>  {\n  return (\n    <Switch>\n      <Route path=\"/signin\" component={Signin} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport  { Navbar, Nav, Dropdown, Icon } from 'rsuite';\nimport { UIContext } from '../../contexts/UIContext';\nimport { UserContext } from '../../contexts/UserContext';\nimport './public.css';\n\nconst Header = (props) => {\n  const { setMessage } = useContext(UIContext);\n  const { user, logout } = useContext(UserContext);\n\n  const handleLogout = () => {\n    setMessage({\n      isMessage: true,\n      title: 'success',\n      description: '登出成功'\n    });\n    setTimeout(() => logout(), 2000);\n  };\n\n  const transferRole = (role) => {\n    if(role === 'student') return '同学';\n    else if(role === 'staff') return '老师';\n  };\n\n  const transferNum = (role) => {\n    if(role === 'student') return `/student-profile/${user.studentId}`;\n    else if(role === 'staff') return `/staff-profile/${user.workId}`;\n  };\n\n  return (\n    <div className=\"my-header\">\n      <Navbar appearance=\"subtle\" style={{ padding: 4.5 }}>\n        <Navbar.Body>\n        <Nav pullRight>\n          <Dropdown\n            title={`欢迎！${user.name}${transferRole(user.role)}`}\n            icon={<Icon icon=\"fa\" style={{ color: '#eb2f00' }} />}\n          >\n            <Dropdown.Item\n              componentClass={Link}\n              to={transferNum(user.role)}\n              onClick={() => localStorage.setItem('history', '/home')}\n            >个人信息</Dropdown.Item>\n            <Dropdown.Item onClick={handleLogout}>退出登录</Dropdown.Item>\n          </Dropdown>\n        </Nav>\n        </Navbar.Body>\n      </Navbar>\n    </div>\n  );\n};\n\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Sidenav, Nav, Icon, Dropdown } from 'rsuite';\nimport { UserContext } from '../../contexts/UserContext';\nimport './public.css';\n\nconst headerStyles = {\n  textAlign: 'center',\n  padding: 20,\n  fontSize: 18,\n  fontWeight: 'bold',\n  color: '#454546'\n};\n\nconst Sidebar = () => {\n  const { user } = useContext(UserContext);\n  return (\n    <div>\n      <Sidenav\n        defaultOpenKeys={['3', '4', '5']}\n        appearance=\"subtle\"\n      >\n        <Sidenav.Header>\n          <div style={headerStyles}>教学管理系统</div>\n        </Sidenav.Header>\n\n        <Sidenav.Body>\n          <Nav>\n            <Nav.Item\n              eventKey=\"2\"\n              icon={<Icon icon=\"home\" />}\n              componentClass={Link}\n              to=\"/\"\n            >\n              首页\n            </Nav.Item>\n\n            <Dropdown eventKey=\"3\" title=\"课程\" icon={<Icon icon=\"book\" />}>\n              { user.role === 'student' && (\n                <Dropdown.Item componentClass={Link} to=\"/choose-class\">选课</Dropdown.Item>\n              ) }\n              { user.role === 'student' && (\n                <Dropdown.Item componentClass={Link} to=\"/my-class\">我的课程</Dropdown.Item>\n              ) }\n              { user.role === 'staff' && (\n                <Dropdown.Item componentClass={Link} to=\"/choose-class-status\">选课情况</Dropdown.Item>\n              ) }\n            </Dropdown>\n\n            <Dropdown eventKey=\"4\" title=\"成绩\" icon={<Icon icon=\"check-square\" />}>\n              { user.role === 'student' && (\n                <Dropdown.Item componentClass={Link} to=\"/score\">成绩信息</Dropdown.Item>\n              ) }\n              { user.role === 'staff' && (\n                <Dropdown.Item componentClass={Link} to=\"/score-status\">成绩管理</Dropdown.Item>\n              ) }\n            </Dropdown>\n\n            <Dropdown eventKey=\"5\" title=\"列表\" icon={<Icon icon=\"bars\" />}>\n              <Dropdown.Item componentClass={Link} to=\"/students\">学生</Dropdown.Item>\n              <Dropdown.Item componentClass={Link} to=\"/staffs\">教职工</Dropdown.Item>\n            </Dropdown>\n\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext } from 'react';\nimport { Grid, Row, Col } from 'rsuite';\nimport { UserContext } from '../../contexts/UserContext';\nimport AppRouter from '../../tools/AppRouter';\nimport Router from '../../tools/Router';\nimport Header from '../../components/public/Header';\nimport Sidebar from '../../components/public/Sidebar';\n\nconst Index = () => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <div className=\"index\">\n      { user === null ? (\n        <Router />\n      ) : (\n        <Grid fluid>\n          <Row>\n            <Col xs={4} className=\"sidebar-col\">\n              <div className=\"sidebar-container\">\n                <Sidebar />\n              </div>\n            </Col>\n            <Col xs={20} style={{ padding: 0 }}>\n              <Header />\n              <AppRouter />\n            </Col>\n          </Row>\n        </Grid>\n      ) }\n    </div>\n  );\n}\n\nexport default Index;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport UIContextProvider from './contexts/UIContext';\nimport UserContextProvider from './contexts/UserContext';\nimport Index from './pages/index/Index';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <UIContextProvider>\n          <UserContextProvider>\n            <Index />\n          </UserContextProvider>\n        </UIContextProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}